# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Purpose:       config file for zsh)
#
#Site        :https://renantmagalhaes.net
#Author      :Renan Toesqui Magalh√£es <renantmagalhaes@gmail.com>
#                                     <https://github.com/renantmagalhaes>
#
# ---------------------------------------------------------------
#
# Changelog
#
#   V0.1 2019-01-30 RTM:
#       - Initial release
#
#   TODO
#   * 


#RTM

# Path to your oh-my-zsh installation.
export ZSH="/home/$USER/.oh-my-zsh"

# Set theme
POWERLEVEL9K_MODE='nerdfont-complete'
ZSH_THEME="powerlevel10k/powerlevel10k"

# #Plugins

plugins=(
  git
  kubectl
  #kube-ps1
  zsh-completions
  zsh-autosuggestions
  zsh-syntax-highlighting
  colored-man-pages
  colorize
  command-not-found
  docker
  docker-compose
  tmux
  virtualenv
  git-auto-fetch
  aws
)



# ######################### General Setup ########################

#Custom plugins
source $ZSH/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source $ZSH/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh


#Python virtualenv and Virtualenvwrapper
export WORKON_HOME=$HOME/.virtualenvs
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
source /usr/local/bin/virtualenvwrapper.sh

#source
source $ZSH/oh-my-zsh.sh

# fzf search 
source /usr/share/fzf/shell/key-bindings.zsh

# enhancd
source $ZSH/custom/plugins/enhancd/init.sh
ENHANCD_FILTER=fzf
export ENHANCD_FILTER

# crontab editor
export VISUAL=vim

# FZF color scheme
## with transparent
export FZF_DEFAULT_OPTS='--color=fg:#f8f8f2,hl:#88f298 --color=fg+:#f8f8f2,bg+:#44475a,hl+:#88f298 --color=info:#f0fc68,prompt:#7499f7,pointer:#ffb86c --color=marker:#ffb86c,spinner:#9cf598,header:#6272a4'
# export FZF_DEFAULT_OPTS='--color=fg:#f8f8f2,hl:#bd93f9 --color=fg+:#f8f8f2,bg+:#44475a,hl+:#bd93f9 --color=info:#9cf598,prompt:#7499f7,pointer:#ffb86c --color=marker:#ffb86c,spinner:#9cf598,header:#6272a4'
## with opaque bg
# export FZF_DEFAULT_OPTS='--color=fg:#f8f8f2,bg:#282a36,hl:#bd93f9 --color=fg+:#f8f8f2,bg+:#44475a,hl+:#bd93f9 --color=info:#ffb86c,prompt:#50fa7b,pointer:#ff79c6 --color=marker:#ff79c6,spinner:#ffb86c,header:#6272a4'

# History 
HISTFILE="$HOME/.zsh_history"
## Number of events loaded into memory
HISTSIZE=1000000
## Number of events stored in the zsh history file
SAVEHIST=1000000
## Do not save duplicate commands to history
setopt HIST_IGNORE_ALL_DUPS
## Do not find duplicate command when searching
setopt HIST_FIND_NO_DUPS


# check cmd function
check_cmd() {
    command -v "$1" >/dev/null 2>&1
}

#Aliases
gnome_check=`env |grep XDG_CURRENT_DESKTOP |grep -ioh "GNOME" | awk '{print tolower($0)}'`
kde_check=`env |grep XDG_CURRENT_DESKTOP |grep -ioh "KDE" | awk '{print tolower($0)}'`
i3_check=`env |grep XDG_CURRENT_DESKTOP |grep -ioh "I3" | awk '{print tolower($0)}'`
bspwm_check=`env |grep DESKTOP_SESSION |grep -ioh "bspwm" | awk '{print tolower($0)}'`
wsl_check=`env |grep WSL |grep -ioh "ubuntu"| awk '{print tolower($0)}'`

if check_cmd apt-get; then # FOR DEB SYSTEMS
    alias update-all="sudo apt update && sudo apt upgrade -y && brew update && brew upgrade && sudo flatpak update -y && sudo snap refresh"
    if [[ $gnome_check == "gnome" ]]; then
    alias folder="nautilus"
    alias pdf="evince"
    alias code="flatpak run com.visualstudio.code"
    elif [[ $kde_check == "kde" ]]; then
    alias folder="dolphin"
    alias pdf="okular"
    alias code="flatpak run com.visualstudio.code"
    elif [[ $wsl_check == "ubuntu" ]]; then
    alias folder="explorer.exe"
    elif [[ $i3_check == "i3" ]]; then
    alias folder="nautilus"
    alias pdf="evince"
    alias code="flatpak run com.visualstudio.code"
    # alias docker="podman"
    # alias docker-compose="podman-compose"
    elif [[ $bspwm_check == "bspwm" ]]; then
    alias folder="nautilus"
    alias pdf="evince"
    alias code="flatpak run com.visualstudio.code"
    else
    echo ""
    fi

elif check_cmd dnf; then  # FOR RPM SYSTEMS
    alias update-all="sudo dnf update -y && brew update && brew upgrade && sudo flatpak update -y && sudo snap refresh"
    if [[ $gnome_check == "gnome" ]]; then
    alias folder="nautilus"
    alias pdf="evince"
    alias code="flatpak run com.visualstudio.code"
    # alias docker="podman"
    # alias docker-compose="podman-compose"
    elif [[ $kde_check == "kde" ]]; then
    alias folder="dolphin"
    alias pdf="okular"
    alias code="flatpak run com.visualstudio.code"
    # alias docker="podman"
    # alias docker-compose="podman-compose"
    elif [[ $i3_check == "i3" ]]; then
    alias folder="nautilus"
    alias pdf="evince"
    alias code="flatpak run com.visualstudio.code"
    # alias docker="podman"
    # alias docker-compose="podman-compose"
    elif [[ $bspwm_check == "bspwm" ]]; then
    alias folder="nautilus"
    alias pdf="evince"
    alias code="flatpak run com.visualstudio.code"
    # alias docker="podman"
    # alias docker-compose="podman-compose"
    else
    echo ""
    fi

elif check_cmd zypper; then  # FOR ZYPPER SYSTEMS
    alias update-all="sudo zypper ref && sudo zypper dup && brew update && brew upgrade && sudo flatpak update -y && sudo snap refresh"
    if [[ $gnome_check == "gnome" ]]; then
    alias folder="nautilus"
    alias pdf="evince"
    alias code="flatpak run com.visualstudio.code"
    elif [[ $kde_check == "kde" ]]; then
    alias folder="dolphin"
    alias restart-kde="kwin_x11 --replace &"
    alias pdf="okular"
    alias code="flatpak run com.visualstudio.code"
    # export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3.9
    else
    echo ""
    fi
    
elif check_cmd pacman; then  # FOR RPM SYSTEMS
    alias update-all="yay -Syu && sudo pacman -Syu && brew update && brew upgrade && sudo flatpak update -y && sudo snap refresh"
    if [[ $gnome_check == "gnome" ]]; then
    alias folder="nautilus"
    alias code="flatpak run com.visualstudio.code"
    elif [[ $kde_check == "kde" ]]; then
    alias folder="dolphin"
    alias code="flatpak run com.visualstudio.code"
    else
    echo "Not able to identify desktop environment"
    fi
else
    echo ""
fi

alias killtmux="pidof tmux |xargs kill -9"
alias python="python3"
alias killvivaldi="pidof vivaldi-bin |xargs kill -9"
# alias bluetooth-restart="sudo rfkill block bluetooth && sudo rfkill unblock bluetooth && sudo systemctl restart bluetooth"
alias bluetooth-restart="sudo systemctl stop bluetooth.service && sudo rm -rf /var/lib/bluetooth/* && sudo systemctl start bluetooth.service"
alias vga-info="lspci -nnk |grep -A3 VGA"
alias latte-restart="pidof latte-dock |xargs kill -9 && latte-dock &"
alias flatpak-home-permission="sudo flatpak override --filesystem=home:ro"

alias cp='cp -iv'
alias rm='rm -ir'
alias mv='mv -iv'
alias ln='ln -sriv'
alias xclip='xclip -selection c'
command -v vim > /dev/null && alias vi='vim'

### Colorize commands
#alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias diff='diff --color=auto'
alias ip='ip --color=auto'

### LS & TREE
alias ll='ls -la'
alias la='ls -A'
alias l='ls -F'

### SSH-KEYGEN ###
alias ssh-keygen-4096='ssh-keygen -t rsa -b 4096'
alias ssh-keygen-ed25519='ssh-keygen -t ed25519'

# VIM
alias vi='nvim'

### Utils ###
alias disk-manager='ncdu'
alias mouse-battery='upower --dump |grep -A 5 mouse | egrep -oh '"'"'[0-9]*%'"'"''
alias ascii-image='jp2a --output=ascii.txt --colors $1'
alias pdf-signature='xournal'
alias nordvpn-c='nordvpn connect && nordvpn set tpl on && nordvpn set killswitch on'
alias nordvpn-d='nordvpn set killswitch off && nordvpn set tpl off && nordvpn disconnect'

### Security Tools
alias sherlock='docker run -i theyahya/sherlock'
alias legion='docker run -it carlospolop/legion:latest sh -c "/legion/legion.py"'
alias waymore='python3 ~/GIT-REPOS/CORE/waymore/waymore.py'

# command -v exa > /dev/null && alias ls='exa --icons --group-directories-first -g -b -h' && \
#   alias tree='exa --tree'
command -v lsd > /dev/null && alias ls='lsd --group-dirs first' && \
	alias tree='lsd --tree'
# command -v colorls > /dev/null && alias ls='colorls --sd --gs' && \
# 	alias tree='colorls --tree'

### CAT & LESS
#command -v batcat > /dev/null && \
#	alias batcat='batcat --theme=ansi-$([ "$COLOR_SCHEME" = "light" ] && echo "light" || echo "dark")' && \
#	alias cat='batcat --pager=never' && \
#	alias less='batcat'

# colorize ls
[ -x /usr/bin/dircolors ] && eval "$(dircolors -b)"

### TOP
command -v htop > /dev/null && alias top='htop'
command -v bpytop > /dev/null && alias top='bpytop'

# Completion.
fpath+=(~/.config/hcloud/completion/zsh)
autoload -U compinit && compinit
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'       # Case insensitive tab completion
zstyle ':completion:*' rehash true                              # automatically find new executables in path 
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"         # Colored completion (different colors for dirs/files/etc)
zstyle ':completion:*' completer _expand _complete _ignored _approximate
zstyle ':completion:*' menu select=2
zstyle ':completion:*' select-prompt '%SScrolling active: current selection at %p%s'
zstyle ':completion:*:descriptions' format '%U%F{cyan}%d%f%u'


# Speed up completions
zstyle ':completion:*' accept-exact '*(N)'
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.cache/zcache

# automatically load bash completion functions
autoload -U +X bashcompinit && bashcompinit

######################### PATHS ########################

# Additional paths
export PATH="/usr/sbin:/usr/share/code/bin:$PATH"
if [ -e /home/rtm/.nix-profile/etc/profile.d/nix.sh ]; then . /home/rtm/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer

#brew
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

# P10K External config file
# # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
