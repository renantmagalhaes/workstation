#!/usr/bin/env perl
use strict;
use warnings;
use utf8;
use Getopt::Long;

binmode(STDOUT, ":utf8");

# Default values
my $t_warn = $ENV{T_WARN} || 55;
my $t_crit = $ENV{T_CRIT} || 70;
my $chip = $ENV{SENSOR_CHIP} || "";
my $temperature = -9999;
my $label = "ðŸ˜€ ";

sub help {
    print "Usage: temperature [-w <warning>] [-c <critical>] [--chip <chip>]\n";
    print "-w <percent>: warning threshold to become yellow\n";
    print "-c <percent>: critical threshold to become red\n";
    print "--chip <chip>: sensor chip\n";
    exit 0;
}

GetOptions(
    "help|h" => \&help,
    "w=i"    => \$t_warn,
    "c=i"    => \$t_crit,
    "chip=s" => \$chip
);

# Get chip temperature
open(SENSORS, "sensors -u $chip |") or die "Cannot run sensors command: $!";
while (<SENSORS>) {
    if (/^\s+temp1_input:\s+[\+]*([\-]*\d+\.\d)/) {
        $temperature = $1;
        last;
    }
}
close(SENSORS);

$temperature eq -9999 and die 'Cannot find temperature';

# Determine icon based on temperature
if ($temperature < 45) {
    $label = 'ï‹‹';
} elsif ($temperature < 55) {
    $label = 'ï‹Š';
} elsif ($temperature < 65) {
    $label = 'ï‹‰';
} elsif ($temperature < 75) {
    $label = 'ï‹ˆ';
} else {
    $label = 'ï‹‡';
}

# Display temperature with color for thresholds
if ($temperature >= $t_crit) {
    print "%{F#ff5b4f}${label}  $temperatureÂ°C%{F-}\n"; # Red for critical
    exit 33;
} elsif ($temperature >= $t_warn) {
    print "%{F#ffd966}${label}  $temperatureÂ°C%{F-}\n"; # Yellow for warning
} else {
    print "${label}  $temperatureÂ°C\n"; # Default color
}

# Display threshold values with color
# print "%%{F#FFFC00}Warning Threshold: $t_warnÂ°C%%{F-}\n";
# print "%%{F#FF0000}Critical Threshold: $t_critÂ°C%%{F-}\n";

exit 0;
