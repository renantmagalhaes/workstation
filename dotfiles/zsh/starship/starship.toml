# -------------------------------
# STARSHIP CONFIGURATION FILE
#
# This file configures your Starship prompt. Each module below
# represents a piece of information you wish to display at your prompt.
#
# The "format" variable at the top defines the overall layout and order
# of modules. New modules have been added for Kubernetes, Terraform,
# and a custom "sudo" module.
# -------------------------------

# This is the main prompt format.
# Each element (e.g. $git_branch, $python) is a module that gets rendered.
# New modules ($kubernetes, $terraform, and $custom.sudo) have been added.
format = """
${custom.diricon}${directory}\
$git_branch\
$git_status\
$sudo\
$fill\
$python\
$lua\
$nodejs\
$golang\
$haskell\
$rust\
$ruby\
$package\
$aws\
$kubernetes\
$terraform\
$docker_context\
$jobs\
$cmd_duration\
$line_break\
$character"""

# If true, a newline is added at the end of the prompt.
add_newline = true

# Palette used for the overall color theme.
palette = 'onedark'

# Timeout (in milliseconds) for commands executed by Starship.
command_timeout = 3600000


# -------------------------------
# DIRECTORY MODULE
# This section formats the directory (path) displayed in your prompt.
[directory]
style = 'fg:#FFFFFF'
truncation_length = 3
truncation_symbol = '‚Ä¶/'
truncate_to_repo = false
home_symbol = ''
read_only_style = '197'
read_only = ' ÔÄ£ '
format = '[$path]($style)[$read_only]($read_only_style) '

# Optionally, you can create substitutions for directory names by uncommenting and modifying the lines below.
# [directory.substitutions]
# 'Documents' = 'Û∞àô'
# 'Downloads' = 'ÔÄô '
# 'Music' = 'ÔÄÅ '
# 'Pictures' = 'ÔÄæ '
# 'Images' = 'ÔÄæ '


# -------------------------------
# GIT BRANCH MODULE
# Displays the current Git branch, if inside a Git repo.
[git_branch]
style = 'fg:green'
symbol = 'Ôêò '
format = '[on](white) [$symbol$branch ]($style)'

# -------------------------------
# GIT STATUS MODULE
# Shows Git statuses like changed, added, or untracked files.
[git_status]
style = 'fg:green'
format = '([$all_status$ahead_behind]($style) )'

# -------------------------------
# FILL MODULE
# Inserts a space used for formatting.
[fill]
symbol = ' '


# -------------------------------
# PYTHON MODULE
# Shows information about the active Python version and virtual environment.
[python]
symbol = "ÓòÜ "
# Uncomment the next line if you want to show the pyenv version name.
# pyenv_version_name = true
format = '[${symbol}python (\($virtualenv\) )]($style)'
style = "bold yellow"
pyenv_prefix = " "
detect_extensions = ["py"]
version_format = "v${raw}"


# -------------------------------
# LUA MODULE
# Displays a Lua icon when working with Lua files or environments.
[lua]
symbol = 'Óò† '


# -------------------------------
# NODEJS MODULE
# Detects Node.js versions when in projects that contain package.json or .node-version files.
[nodejs]
format = "[Óúò Node.js $version](bold green) "
detect_files = ["package.json", ".node-version"]
detect_folders = ["node_modules"]


# -------------------------------
# GOLANG MODULE
# Shows the current Go version when in a Go project.
[golang]
style = 'blue'
symbol = 'Óòß '


# -------------------------------
# HASKELL MODULE
# Displays Haskell related info.
[haskell]
style = 'blue'
symbol = 'Óù∑ '


# -------------------------------
# RUST MODULE
# Shows the active Rust version if available.
[rust]
style = 'orange'
symbol = 'Óû® '


# -------------------------------
# RUBY MODULE
# Displays Ruby version info.
[ruby]
style = 'red'
symbol = 'Óûë '


# -------------------------------
# PACKAGE MODULE
# Shows package information such as version if available.
[package]
symbol = 'Û∞èó '


# -------------------------------
# AWS MODULE
# Displays the AWS profile and session duration if active.
[aws]
symbol = 'Ôâ∞ '
style = 'orange'
format = '[$symbol($profile )(\[$duration\] )]($style)'


# -------------------------------
# KUBERNETES MODULE
# Shows the active Kubernetes context when in a Kubernetes-configured directory.
[kubernetes]
symbol = '‚ò∏Ô∏è '
style = 'blue'
format = '[$symbol$context]($style) '
# Set to true to disable, false to enable this module:
disabled = false


# -------------------------------
# TERRAFORM MODULE
# Displays the Terraform version when in a Terraform project.
[terraform]
symbol = 'Ô¨ô '
style = 'magenta'
format = '[$symbol$version]($style) '
disabled = false


# -------------------------------
# OFFICIAL SUDO MODULE
# This module displays if sudo credentials are cached (e.g., after a recent sudo command).
# It is disabled by default, so we enable it by setting disabled to false.
[sudo]
style = '#FFFFFF'
symbol = 'üßô '
disabled = false
allow_windows = false

# -------------------------------
# DOCKER CONTEXT MODULE
# Displays the current Docker context if applicable.
[docker_context]
format = 'via [üêã $context](blue bold)'


# -------------------------------
# JOBS MODULE
# Indicates the number of background jobs.
[jobs]
symbol = 'ÔÄì '
style = 'red'
number_threshold = 1
format = '[$symbol]($style)'


# -------------------------------
# COMMAND DURATION MODULE
# Displays the duration of the last command if it ran longer than 500ms.
[cmd_duration]
min_time = 500
style = 'fg:gray'
format = '[$duration]($style)'

# -------------------------------
# CHARACTER MODULE
# Displays the prompt character.

[character]
success_symbol = '[ÔÖï](bold green) '
error_symbol = '[‚úó](bold red) '

# -------------------------------
# CUSTOM COMMANDS
# Below are custom-defined commands used to create specific prompt components.
# -------------------------------

# Custom directory icon:
[custom.diricon]
command = '''
if [ "$PWD" = "$HOME" ]; then
  echo "Û∞ãú ~"
elif [ "$PWD" = "$HOME/Documents" ]; then
  echo "Û∞àô "
elif [ "$PWD" = "$HOME/Downloads" ]; then
  echo "ÔÄô "
elif [ "$PWD" = "$HOME/Music" ]; then
  echo "ÔÄÅ "
elif [ "$PWD" = "$HOME/Pictures" ]; then
  echo "ÔÄæ "
elif [ "$PWD" = "$HOME/Images" ]; then
  echo "ÔÄæ "
else
  echo "ÔÅº "
fi
'''
when = "true"
shell = ["bash"]
style = "fg:dark_purple"
format = '[$output]($style) '


# -------------------------------
# CUSTOM THEMES / PALETTES
# Define custom color palettes to be used by the prompt.
[palettes.nord]
dark_blue = '#5E81AC'
blue = '#81A1C1'
teal = '#88C0D0'
red = '#BF616A'
orange = '#D08770'
green = '#A3BE8C'
yellow = '#EBCB8B'
purple = '#B48EAD'
gray = '#434C5E'
black = '#2E3440'
white = '#D8DEE9'
dark_purple = '#905AFF'

[palettes.onedark]
dark_blue = '#61afef'
blue = '#56b6c2'
red = '#e06c75'
green = '#98c379'
purple = '#c678dd'
cyan = '#56b6c2'
orange = '#be5046'
yellow = '#e5c07b'
gray = '#828997'
white = '#abb2bf'
black = '#2c323c'
dark_purple = '#905AFF'

