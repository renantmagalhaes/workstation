[module/sysmenu]
type = custom/text

content = 
content-foreground = ${color.white}

click-left = ~/.config/polybar/scripts/launcher/powermenu.sh &

[module/launcher]
type = custom/text

content = " "
content-foreground = ${color.purple}

; "click-(left|middle|right)" will be executed using "/usr/bin/env sh -c $COMMAND"
click-left = ~/.config/polybar/scripts/launcher/launcher.sh &
;;click-middle = ~/.config/polybar/forest/scripts/launcher-full
; click-right = ~/.config/polybar/scripts/style-switch.sh &

; "scroll-(up|down)" will be executed using "/usr/bin/env sh -c $COMMAND"
;;scroll-up = ~/.config/polybar/forest/scripts/launcher.sh &
;;scroll-down = ~/.config/polybar/forest/scripts/color-switch.sh &

[module/sep]
type = custom/text
content = |

content-foreground = ${color.white}

[module/space]
type = custom/text
content = " "

content-foreground = ${color.white}

[module/space2]
type = custom/text
content = "  "

content-foreground = ${color.white}

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/spacer]
type = custom/text
content = __
content-foreground = ${color.background}

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/rtm-temperature]
type = custom/script

; Available tokens:
;   %counter%
; Command to be executed (using "/bin/sh -c [command]")
exec = /bin/bash -c "~/.config/bspwm/scripts/temperature"

; Conditional command that, if defined, needs to exit successfully
; before the main exec command is invoked.
; Default: ""
; exec-if = pgrep -x myservice

; Set this to true for scripts that continuously produce output
; If set to 'true', everytime the script produces a new line of output, the module updates.
; Otherwise, only the first line of output is considered and all later lines are discarded.
; Default: false
tail = false

; Seconds to sleep between updates
; Default: 5 (0 if `tail = true`)
interval = 5

; Set environment variables in the 'exec' script
; New in version 3.6.0
; env-NAME = VALUE
; env-FOO = BAR

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/updates]
type = custom/script

; Available tokens:
;   %counter%
; Command to be executed (using "/bin/sh -c [command]")
exec = /bin/bash -c "~/.config/bspwm/scripts/check_updates"

; Conditional command that, if defined, needs to exit successfully
; before the main exec command is invoked.
; Default: ""
; exec-if = pgrep -x myservice

; Set this to true for scripts that continuously produce output
; If set to 'true', everytime the script produces a new line of output, the module updates.
; Otherwise, only the first line of output is considered and all later lines are discarded.
; Default: false
tail = false

; Seconds to sleep between updates
; Default: 5 (0 if `tail = true`)
interval = 600

; Set environment variables in the 'exec' script
; New in version 3.6.0
; env-NAME = VALUE
; env-FOO = BAR

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/microphone]
type = custom/script

; Available tokens:
;   %counter%
; Command to be executed (using "/bin/sh -c [command]")
exec = /bin/bash -c "~/.config/polybar/scripts/verify-mic/microphone.sh"

; Conditional command that, if defined, needs to exit successfully
; before the main exec command is invoked.
; Default: ""
; exec-if = pgrep -x myservice

; Set this to true for scripts that continuously produce output
; If set to 'true', everytime the script produces a new line of output, the module updates.
; Otherwise, only the first line of output is considered and all later lines are discarded.
; Default: false
tail = false

; Seconds to sleep between updates
; Default: 5 (0 if `tail = true`)
interval = 0,5

click-left = pactl set-source-mute @DEFAULT_SOURCE@ toggle
click-right = pactl set-source-mute @DEFAULT_SOURCE@ toggle

; Set environment variables in the 'exec' script
; New in version 3.6.0
; env-NAME = VALUE
; env-FOO = BAR


;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/dunst-notification]
type = custom/text
content = ""
; content-foreground = ${color.background}
click-left = xdotool key ctrl+period
click-middle = xdotool key ctrl+period
click-right = xdotool key ctrl+period